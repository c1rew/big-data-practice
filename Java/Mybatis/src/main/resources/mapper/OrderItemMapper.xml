<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.viper.demo.mapper.OrderItemMapper">

    <!-- 定义t_order_item与OrderItem对象之间的映射关系-->
    <resultMap id="orderItemMap" type="OrderItem">
        <id property="id" column="id"/>
        <result property="amount" column="amount"/>
        <result property="orderInfoId" column="order_info_id"/>
        <!--映射OrderItem关联的Product对象-->
        <association property="product" javaType="Product">
            <id property="id" column="product_id"/>
            <result property="name" column="name"/>
            <result property="description" column="description"/>
            <result property="price" column="price"/>
        </association>
    </resultMap>

    <!-- 定义select语句，OrderItemMapper接口中的find()方法会执行该SQL，
        查询结果通过orderItemMap这个映射生成OrderItem对象-->
    <select id="find" resultMap="orderItemMap">
        SELECT i.*,p.*,p.id AS product_id
        FROM t_order_item AS i JOIN t_product AS p
            ON i.product_id = p.id
        WHERE id = #{id:INTEGER}
    </select>

    <!-- 定义select语句，OrderItemMapper接口中的findAll()方法会执行该SQL，
        查询结果通过orderItemMap这个映射生成OrderItem对象-->
    <select id="findByOrderId" resultMap="orderItemMap">
        SELECT i.*,p.*
        FROM t_order_item AS i JOIN t_product AS p
               ON i.product_id = p.id
        WHERE i.order_id = #{order_info_id:INTEGER}
    </select>

    <!-- 定义insert语句，OrderItemMapper接口中的save()方法会执行该SQL，
        数据库生成的自增id会自动填充到传入的OrderItem象的id字段中-->
    <insert id="save" keyProperty="orderItem.id" useGeneratedKeys="true">
        INSERT INTO t_order_item
            (amount, product_id, order_info_id)
        VALUES
            (#{orderItem.amount}, #{orderItem.product.id}, #{orderInfoId})
    </insert>
</mapper>